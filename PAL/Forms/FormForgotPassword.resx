<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>